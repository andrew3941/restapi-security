server:
  port: 8444
  ssl:
      key-store: classpath:ssl/tomcat.keystore
      key-store-password: preving
      key-password: preving
  servlet:
    context-path: /seguridad-api2


#Frase autenticacion
frase:
  autenticacion:
    intranet: previngIntranetApi
    extranet: previngExtranetApi


# ===============================
# = JWT
# ===============================
jwt:
  header: Authorization
  prefijo: Bearer
  secret: clave para encriptar jwt!
  expiration: 18000
  route:
    authentication:
      path: /login
      refresh: /refresh

spring:
  jackson:
    serialization:
      indent-output: true
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
  data:
    rest:
      default-media-type: application/json
  profiles:
    active: demo

  jmx:
    enabled: false # necesario para no obtener el siguiente error: Unable to register MBean [org.apache.tomcat.dbcp.dbcp2.BasicDataSource

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
  jpa:
    show-sql: true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
    hibernate:
      ddl-auto: none
# Naming strategy
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
    properties:
      hibernate:
        dialect: org.hibernate.dialect.Oracle10gDialect
---

# =================================================
# = DEV
# =================================================

spring:
  profiles: dev

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
  datasource:
    jdbcUrl: jdbc:oracle:thin:@155.155.15.228:1521:pre
    username: gc2006_release
    password: 6DPtc36z1111_
    driver-class-name: oracle.jdbc.driver.OracleDriver
    # Keep the connection alive if idle for a long time (needed in production)
    testWhileIdle: true
    validationQuery: SELECT 1

---

# =================================================
# = DEMO
# =================================================

spring:
  profiles: demo

datasource:
   db-gc2006:
     jndi-name: java:comp/env/jdbc/gc

---

# =================================================
# = PROD
# =================================================

spring:
  profiles: prod

datasource:
   db-gc2006:
     jndi-name: java:comp/env/jdbc/gc
